{
  "name": "next-startup-template",
  "version": "0.1.0",
  "private": true,
  "engines": {
    "node": ">=18.16.0",
    "npm": ">=9.5.1"
  },
  "scripts": {
    "dev": "npm-run-all -p env-check dev:watch",
    "dev:watch": "next dev",
    "prebuild": "npm run env-check",
    "build": "npm run generate-tokens && NODE_ENV=production SENTRY_RELEASE=$npm_package_version NEXT_PUBLIC_APP_VERSION=$npm_package_version next build",
    "prestart": "npm run env-check",
    "start": "next start -p 8000",
    "release": "npm run build",
    "vault": "node scripts/vaultSecrets.js",
    "lint": "eslint src --color --ext .js --ext .jsx --ext .ts --ext .tsx",
    "lint:fix": "eslint src --color --ext .js --ext .jsx --ext .ts --ext .tsx --fix",
    "env-check": "ts-node -r dotenv/config ./scripts/envValidation/envValidation.ts",
    "style-dictionary": "node scripts/styled-components-tokens/styleDictionary.js",
    "make-tokens-files": "node scripts/styled-components-tokens/makeTokensFiles.js",
    "generate-tokens": "npm run make-tokens-files && npm run style-dictionary",
    "normalize-apidoc": "node scripts/normalizeApidoc.js",
    "generate-readme": "ts-node ./scripts/readmeGeneration/generateReadme.ts",
    "fix-ref-parser-path": "node scripts/fixRefParserPath.js",
    "typegen": "typegen apidoc/apidoc-normalize.json > src/types/api.d.ts",
    "download:apidoc": "cross-env APIDOC=http://localhost:8000/api/doc/data.json node scripts/downloadApidoc.js",
    "generate-ts-api": "npm run download:apidoc && npm run normalize-apidoc && npm run fix-ref-parser-path && npm run typegen",
    "pretype-check": "npm run generate-tokens --if-present",
    "type-check": "tsc --noEmit",
    "translations-csv-to-json": "npx convert-csv-to-json GoodRequest/i18nextJsonToCsv",
    "translations-json-to-csv": "npx convert-json-to-csv GoodRequest/i18nextJsonToCsv",
    "lint:styles": "stylelint 'src/**/*.{js,jsx,ts,tsx}'",
    "fix:styles": "stylelint 'src/**/*.{js,jsx,ts,tsx}' --fix"
  },
  "scriptsDescriptions": {
    "dev": "Starts the development server, default port is 3000.",
    "dev:watch": "Starts the development server with hot reloading enabled.",
    "prebuild": "Checks the environment before running the build script.",
    "build": "Builds the application for production and upload source maps to sentry.",
    "prestart": "Checks the environment before running the start script.",
    "start": "Starts the production server, default port is 8000.",
    "release": "Builds the application for production.",
    "vault": "Download process environment variable from vault.",
    "lint": "Lints the source code with eslint.",
    "lint:fix": "Perform linting on the source code files.",
    "env-check": "Used to perform environment variable validation.",
    "style-dictionary": "Script utilizes the Style Dictionary library to generate design tokens.",
    "make-tokens-files": "Script generate tokens files for styled components.",
    "generate-tokens": "Generation of design tokens.",
    "normalize-apidoc": "Normalizes the apidoc JSON file.",
    "generate-readme": "Generates README file which contains basic information about the project, env variables, etc.",
    "fix-ref-parser-path": "Fixes the path for the types generation.",
    "typegen": "Generates TypeScript type definitions from the normalized apidoc JSON file.",
    "download:apidoc": "Downloads the apidoc JSON file.",
    "generate-ts-api": "Downloads and generates TypeScript type definitions from the apidoc JSON file.",
    "pretype-check": "Generates figma tokens before run type-check command.",
    "type-check": "Type-checks the TypeScript source code.",
    "translations-csv-to-json": "Convert CSV files containing translations into JSON format.",
    "translations-json-to-csv": "Convert JSON files containing translations into CSV format.",
    "lint:styles": "Lint all CSS errors.",
    "fix:styles": "Fix all CSS errors."
  },
  "dependencies": {
    "@ant-design/icons": "5.1.4",
    "@hookform/resolvers": "3.3.2",
    "@medusajs/medusa": "1.20.5",
    "@medusajs/medusa-js": "6.1.8",
    "@next/bundle-analyzer": "14.1.4",
    "@react-aria/toast": "3.0.0-beta.18",
    "@react-stately/toast": "3.0.0-beta.7",
    "@sentry/integrations": "7.108.0",
    "@sentry/nextjs": "7.108.0",
    "@stripe/react-stripe-js": "2.7.3",
    "@stripe/stripe-js": "4.1.0",
    "@tanstack/react-query": "4.22.4",
    "@tanstack/react-query-devtools": "4.22.4",
    "antd": "5.10.2",
    "axios": "1.5.1",
    "child_process": "1.0.2",
    "dayjs": "1.11.10",
    "jwt-decode": "3.1.2",
    "lodash": "4.17.21",
    "lucide-react": "0.378.0",
    "medusa-react": "9.0.17",
    "next": "13.4.12",
    "next-intl": "3.4.2",
    "nprogress": "0.2.0",
    "openapi-client-axios": "7.3.11",
    "openapi-client-axios-typegen": "7.3.11",
    "qs": "6.11.2",
    "react": "18.2.0",
    "react-aria-components": "1.5.0",
    "react-dom": "18.2.0",
    "react-error-boundary": "4.0.12",
    "react-hook-form": "7.48.2",
    "style-dictionary": "3.9.0",
    "styled-components": "6.0.7",
    "typescript": "5.2.2",
    "zod": "3.22.4"
  },
  "devDependencies": {
    "@commitlint/cli": "18.4.4",
    "@goodrequest/convert-translations-i18next": "1.0.9",
    "@goodrequest/eslint-config-typescript-next": "1.1.1",
    "@next/eslint-plugin-next": "14.1.4",
    "@svgr/webpack": "8.1.0",
    "@types/glob": "8.1.0",
    "@types/grecaptcha": "3.0.6",
    "@types/lodash": "4.14.200",
    "@types/node": "20.8.8",
    "@types/nprogress": "0.2.2",
    "@types/qs": "6.9.9",
    "@types/react": "18.2.31",
    "@types/react-dom": "18.2.14",
    "@typescript-eslint/eslint-plugin": "7.6.0",
    "commitlint-config-jira": "1.6.4",
    "commitlint-plugin-jira-rules": "1.6.4",
    "cross-env": "7.0.3",
    "dotenv": "16.3.1",
    "eslint": "8.57.0",
    "eslint-plugin-import": "2.29.1",
    "eslint-plugin-jsx-a11y": "6.8.0",
    "eslint-plugin-prettier": "5.1.3",
    "eslint-plugin-react": "7.34.1",
    "eslint-plugin-react-hooks": "4.6.0",
    "lint-staged": "15.0.2",
    "node-vault": "0.10.2",
    "npm-run-all": "4.1.5",
    "obj-flatten": "2.0.6",
    "openapi-client-axios": "7.3.11",
    "openapi-client-axios-typegen": "7.3.11",
    "postcss-styled-syntax": "0.6.4",
    "prettier": "3.2.5",
    "shx": "0.3.4",
    "stylelint": "16.1.0",
    "stylelint-config-concentric-order": "5.2.0",
    "stylelint-config-standard": "36.0.0",
    "ts-node": "10.9.1"
  },
  "lint-staged": {
    "*.{js, jsx, ts, tsx}": "eslint"
  },
  "browserslist": {
    "production": [
      ">0.2%",
      "not dead",
      "not op_mini all"
    ],
    "development": [
      "last 1 chrome version",
      "last 1 firefox version",
      "last 1 safari version"
    ]
  }
}
